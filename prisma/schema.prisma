// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Section {
  id Int @id @default(autoincrement())
  section String @unique
  users User[]
  schedule_event Schedule_Event[]
}

model Level {
  id Int @id @default(autoincrement())
  level String @unique
  users User[]
  schedule_event Schedule_Event[]
}

model User {
  id Int @id @default(autoincrement())
  npk Int @unique @default(autoincrement())
  email String @unique
  password String
  name String
  gender String
  no_telp BigInt
  levelId Int
  sectionId Int
  level Level @relation(fields: [levelId], references: [id])
  section Section @relation(fields: [sectionId], references: [id])
  attendence Attendence[]
  annual_leave AnnualLeave[]
  overtime Overtime[]
}

model Attendence {
  id Int @id @default(autoincrement())
  time_in DateTime
  time_out DateTime?
  time_working Int?
  status String
  emotion String?
  created_at DateTime @default(now())
  userId Int
  user User @relation(fields:[userId],references:[id])
}

model AnnualLeave {
  id Int @id @default(autoincrement())
  date_start DateTime
  date_end DateTime
  data_count Int
  approval_hrd String?
  approval_leader String?
  status String?
  reason String
  type String
  userId Int
  hrdId Int
  leaderId Int
  hrd User @relation(fields:[hrdId],references:[id])
  leader User @relation(fields:[leaderId],references:[id])
  user User @relation(fields:[userId],references:[id])
}

model Overtime {
  id Int @id @default(autoincrement())
  date DateTime
  approval_leader String?
  compensation String
  overtime_duration Int
  break_duration Int @default(0)
  work_note String
  file String?
  status_paid String?
  shiftId Int
  userId Int
  leaderId Int
  user User @relation(fields:[userId],references:[id])
  leader User @relation(fields:[leaderId],references:[id])
  shift Shift @relation(fields:[shiftId],references:[id])
}

model Schedule_Event {
  id Int @id @default(autoincrement())
  date DateTime
  hours_start  String?
  hours_end    String?
  title String
  description String?
  sectionId Int
  levelId Int
  section Section @relation(fields:[sectionId],references:[id])
  level Level @relation(fields:[levelId],references:[id])
}

model Shift {
  id Int @id @default(autoincrement())
  title String
  work_time String
  overtime Overtime[]
}