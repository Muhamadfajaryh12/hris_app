// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Section {
  id Int @id @default(autoincrement())
  section String @unique
  users User[]
}

model Level {
  id Int @id @default(autoincrement())
  level String @unique
  users User[]
}

model User {
  id Int @id @default(autoincrement())
  npk Int @unique @default(autoincrement())
  email String @unique
  password String
  name String
  gender String
  no_telp BigInt
  levelId Int
  sectionId Int
  level Level @relation(fields: [levelId], references: [id])
  section Section @relation(fields: [sectionId], references: [id])
  attendence Attendence[]
  annual_leave AnnualLeave[]
}

model Attendence {
  id Int @id @default(autoincrement())
  time_in DateTime
  time_out DateTime?
  time_working Int?
  status String
  emotion String?
  created_at DateTime @default(now())
  userId Int
  user User @relation(fields:[userId],references:[id])
}

model AnnualLeave {
  id Int @id @default(autoincrement())
  date_leave DateTime
  approval_hrd String?
  approval_leader String?
  status String?
  reason String
  userId Int
  user User @relation(fields:[userId],references:[id])
}

